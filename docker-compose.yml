version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: hwo_postgres
    environment:
      POSTGRES_DB: hwo_explorer
      POSTGRES_USER: hwo_user
      POSTGRES_PASSWORD: hwo_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data_pipeline/database/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - hwo_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hwo_user -d hwo_explorer"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hwo_backend
    environment:
      DATABASE_URL: postgresql://hwo_user:hwo_password@postgres:5432/hwo_explorer
      SECRET_KEY: your-secret-key-change-in-production
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - hwo_network
    volumes:
      - ./data_science/models:/app/models
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: hwo_frontend
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:8000
    depends_on:
      - backend
    networks:
      - hwo_network
    restart: unless-stopped

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: hwo_redis
    ports:
      - "6379:6379"
    networks:
      - hwo_network
    restart: unless-stopped

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: hwo_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deployment/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - hwo_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  hwo_network:
    driver: bridge
