services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: hwo_postgres
    environment:
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data_pipeline/database/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - hwo_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hwo_user -d hwo_explorer"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    networks:
      - hwo_network
    volumes:
      - ./data_science/models:/app/models
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - hwo_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  hwo_network:
    driver: bridge
